#include "types.h"
#include "parser.h"

static struct amath_node amath_syms[AMATH__MAX] = {
	{ IDENTIFIER,	"\u03B1",	AMATH_none }, /* AMATH_alpha */
	{ IDENTIFIER,	"\u03B2",	AMATH_none }, /* AMATH_beta */
	{ IDENTIFIER,	"\u03C7",	AMATH_none }, /* AMATH_chi */
	{ IDENTIFIER,	"\u03B4",	AMATH_none }, /* AMATH_delta */
	{ IDENTIFIER,	"\u0394",	AMATH_none }, /* AMATH_Delta */
	{ IDENTIFIER,	"\u03B5",	AMATH_none }, /* AMATH_epsi */
	{ IDENTIFIER,	"\u025B",	AMATH_none }, /* AMATH_varepsilon */
	{ IDENTIFIER,	"\u03B7",	AMATH_none }, /* AMATH_eta */
	{ IDENTIFIER,	"\u03B3",	AMATH_none }, /* AMATH_gamma */
	{ IDENTIFIER,	"\u0393",	AMATH_none }, /* AMATH_Gamma */
	{ IDENTIFIER,	"\u03B9",	AMATH_none }, /* AMATH_iota */
	{ IDENTIFIER,	"\u03BA",	AMATH_none }, /* AMATH_kappa */
	{ IDENTIFIER,	"\u03BB",	AMATH_none }, /* AMATH_lambda */
	{ IDENTIFIER,	"\u039B",	AMATH_none }, /* AMATH_Lambda */
	{ IDENTIFIER,	"\u03BB",	AMATH_none }, /* AMATH_lamda */
	{ IDENTIFIER,	"\u039B",	AMATH_none }, /* AMATH_Lamda */
	{ IDENTIFIER,	"\u03BC",	AMATH_none }, /* AMATH_mu */
	{ IDENTIFIER,	"\u03BD",	AMATH_none }, /* AMATH_nu */
	{ IDENTIFIER,	"\u03C9",	AMATH_none }, /* AMATH_omega */
	{ IDENTIFIER,	"\u03A9",	AMATH_none }, /* AMATH_Omega */
	{ IDENTIFIER,	"\u03D5",	AMATH_none }, /* AMATH_phi */
	{ IDENTIFIER,	"\u03C6",	AMATH_none }, /* AMATH_varphi */
	{ IDENTIFIER,	"\u03A6",	AMATH_none }, /* AMATH_Phi */
	{ IDENTIFIER,	"\u03C0",	AMATH_none }, /* AMATH_pi */
	{ IDENTIFIER,	"\u03A0",	AMATH_none }, /* AMATH_Pi */
	{ IDENTIFIER,	"\u03C8",	AMATH_none }, /* AMATH_psi */
	{ IDENTIFIER,	"\u03A8",	AMATH_none }, /* AMATH_Psi */
	{ IDENTIFIER,	"\u03C1",	AMATH_none }, /* AMATH_rho */
	{ IDENTIFIER,	"\u03C3",	AMATH_none }, /* AMATH_sigma */
	{ IDENTIFIER,	"\u03A3",	AMATH_none }, /* AMATH_Sigma */
	{ IDENTIFIER,	"\u03C4",	AMATH_none }, /* AMATH_tau */
	{ IDENTIFIER,	"\u03B8",	AMATH_none }, /* AMATH_theta */
	{ IDENTIFIER,	"\u03D1",	AMATH_none }, /* AMATH_varthetaut */
	{ IDENTIFIER,	"\u0398",	AMATH_none }, /* AMATH_Theta */
	{ IDENTIFIER,	"\u03C5",	AMATH_none }, /* AMATH_upsilon */
	{ IDENTIFIER,	"\u03BE",	AMATH_none }, /* AMATH_xi */
	{ IDENTIFIER,	"\u039E",	AMATH_none }, /* AMATH_Xi */
	{ IDENTIFIER,	"\u03B6",	AMATH_none }, /* AMATH_zeta */
	{ OPERATOR,	"!",		AMATH_none }, /* AMATH_factorial */
	{ OPERATOR,	"+",		AMATH_none }, /* AMATH_plus */
	{ OPERATOR,	"\u2212",	AMATH_none }, /* AMATH_minus */
	{ OPERATOR,	"\u22C5",	AMATH_none }, /* AMATH_cdot */
	{ OPERATOR,	"\u2217",	AMATH_none }, /* AMATH_ast */
	{ OPERATOR,	"\u22C6",	AMATH_none }, /* AMATH_star */
	{ OPERATOR,	"/",		AMATH_none }, /* AMATH_slash */
	{ OPERATOR,	"\\",		AMATH_none }, /* AMATH_backslash */
	{ OPERATOR,	"\\",		AMATH_none }, /* AMATH_setminus */
	{ OPERATOR,	"\u00D7",	AMATH_none }, /* AMATH_times */
	{ OPERATOR,	"\u00F7",	AMATH_none }, /* AMATH_div */
	{ OPERATOR,	"-:",		AMATH_none }, /* AMATH_divide */
	{ OPERATOR,	"\u2218",	AMATH_none }, /* AMATH_circ */
	{ OPERATOR,	"\u2295",	AMATH_none }, /* AMATH_oplus */
	{ OPERATOR,	"\u2297",	AMATH_none }, /* AMATH_otimes */
	{ OPERATOR,	"\u2299",	AMATH_none }, /* AMATH_odot */
	{ OPERATOR,	"\u2211",	AMATH_underover }, /* AMATH_sum */
	{ OPERATOR,	"\u220F",	AMATH_underover }, /* AMATH_prod */
	{ OPERATOR,	"\u2227",	AMATH_none }, /* AMATH_wedge */
	{ OPERATOR,	"\u22C0",	AMATH_underover }, /* AMATH_bigwedge */
	{ OPERATOR,	"\u2228",	AMATH_none }, /* AMATH_vee */
	{ OPERATOR,	"\u22C1",	AMATH_underover }, /* AMATH_bigvee */
	{ OPERATOR,	"\u2229",	AMATH_none }, /* AMATH_cap */
	{ OPERATOR,	"\u22C2",	AMATH_underover }, /* AMATH_bigcap */
	{ OPERATOR,	"\u222A",	AMATH_none }, /* AMATH_cup */
	{ OPERATOR,	"\u22C3",	AMATH_underover }, /* AMATH_bigcup */
	{ OPERATOR,	"=",		AMATH_none }, /* AMATH_eq */
	{ OPERATOR,	"\u2260",	AMATH_none }, /* AMATH_ne */
	{ OPERATOR,	":=",		AMATH_none }, /* AMATH_def */
	{ OPERATOR,	"<",		AMATH_none }, /* AMATH_lt */
	{ OPERATOR,	"\u2264",	AMATH_none }, /* AMATH_le */
	{ OPERATOR,	"\u2264",	AMATH_none }, /* AMATH_leq */
	{ OPERATOR,	">",		AMATH_none }, /* AMATH_gt */
	{ OPERATOR,	"\u2265",	AMATH_none }, /* AMATH_ge */
	{ OPERATOR,	"\u2265",	AMATH_none }, /* AMATH_geq */
	{ OPERATOR,	"\u227A",	AMATH_none }, /* AMATH_prec */
	{ OPERATOR,	"\u227A",	AMATH_none }, /* AMATH_lt2 */
	{ OPERATOR,	"\u227B",	AMATH_none }, /* AMATH_succ */
	{ OPERATOR,	"\u2AAF",	AMATH_none }, /* AMATH_preceq */
	{ OPERATOR,	"\u2AB0",	AMATH_none }, /* AMATH_succeq */
	{ OPERATOR,	"\u2208",	AMATH_none }, /* AMATH_in */
	{ OPERATOR,	"\u2209",	AMATH_none }, /* AMATH_notin */
	{ OPERATOR,	"\u2282",	AMATH_none }, /* AMATH_subset */
	{ OPERATOR,	"\u2283",	AMATH_none }, /* AMATH_supset */
	{ OPERATOR,	"\u2286",	AMATH_none }, /* AMATH_subseteq */
	{ OPERATOR,	"\u2287",	AMATH_none }, /* AMATH_supseteq */
	{ OPERATOR,	"\u2261",	AMATH_none }, /* AMATH_equiv */
	{ OPERATOR,	"\u2245",	AMATH_none }, /* AMATH_cong */
	{ OPERATOR,	"\u2248",	AMATH_none }, /* AMATH_approx */
	{ OPERATOR,	"\u221D",	AMATH_none }, /* AMATH_propto */
	{ TEXT,		"and",		AMATH_none }, /* AMATH_and */
	{ TEXT,		"or",		AMATH_none }, /* AMATH_or */
	{ OPERATOR,	"\u00AC",	AMATH_none }, /* AMATH_neg */
	{ OPERATOR,	"\u21D2",	AMATH_none }, /* AMATH_implies */
	{ OPERATOR,	"if",		AMATH_none }, /* AMATH_if */
	{ OPERATOR,	"\u21D4",	AMATH_none }, /* AMATH_iff */
	{ OPERATOR,	"\u2200",	AMATH_none }, /* AMATH_forall */
	{ OPERATOR,	"\u2203",	AMATH_none }, /* AMATH_exists */
	{ OPERATOR,	"\u22A5",	AMATH_none }, /* AMATH_bot */
	{ OPERATOR,	"\u22A4",	AMATH_none }, /* AMATH_top */
	{ OPERATOR,	"\u22A2",	AMATH_none }, /* AMATH_vdash */
	{ OPERATOR,	"\u22A8",	AMATH_none }, /* AMATH_models */
	{ LEFT,		"(",		AMATH_none }, /* AMATH_lparen */
	{ RIGHT,	")",		AMATH_none }, /* AMATH_rparen */
	{ LEFT,		"[",		AMATH_none }, /* AMATH_lbracket */
	{ RIGHT,	"]",		AMATH_none }, /* AMATH_rbracket */
	{ LEFT,		"{",		AMATH_none }, /* AMATH_lcurly */
	{ RIGHT,	"}",		AMATH_none }, /* AMATH_rcurly */
	{ LEFT,		"|",		AMATH_none }, /* AMATH_pipe */
	{ RIGHT,	"||",		AMATH_none }, /* AMATH_doublepipe */
	{ LEFT,		"\u2329",	AMATH_none }, /* AMATH_lparencolon */
	{ RIGHT,	"\u232A",	AMATH_none }, /* AMATH_rparencolon */
	{ LEFT,		"\u2329",	AMATH_none }, /* AMATH_langle */
	{ RIGHT,	"\u232A",	AMATH_none }, /* AMATH_rangle */
	{ LEFT,		"",		AMATH_none }, /* AMATH_linvis */
	{ RIGHT,	"",		AMATH_none }, /* AMATH_rinvis */
	{ OPERATOR,	"\u222B",	AMATH_none }, /* AMATH_int */
	{ OPERATOR,	"\u222E",	AMATH_none }, /* AMATH_oint */
	{ OPERATOR,	"\u2202",	AMATH_none }, /* AMATH_partial */
	{ OPERATOR,	"\u2207",	AMATH_none }, /* AMATH_nabla */
	{ OPERATOR,	"\u00B1",	AMATH_none }, /* AMATH_pm */
	{ OPERATOR,	"\u2205",	AMATH_none }, /* AMATH_emptyset */
	{ OPERATOR,	"\u221E",	AMATH_none }, /* AMATH_infty */
	{ OPERATOR,	"\u2135",	AMATH_none }, /* AMATH_aleph */
	{ OPERATOR,	"...",		AMATH_none }, /* AMATH_ldots */
	{ OPERATOR,	"\u2234",	AMATH_none }, /* AMATH_therefore */
	{ OPERATOR,	"\u2220",	AMATH_none }, /* AMATH_angle */
	{ OPERATOR,	"\u25B3",	AMATH_none }, /* AMATH_triangle */
	{ OPERATOR,	"\u2032",	AMATH_none }, /* AMATH_prime */
	{ OPERATOR,	"~",		AMATH_none }, /* AMATH_tilde */
	{ OPERATOR,	"\u00A0",	AMATH_none }, /* AMATH_double_backslash */
	{ OPERATOR,	"\u00A0\u00A0",	AMATH_none }, /* AMATH_quad */
	{ OPERATOR,	"\u00A0\u00A0\u00A0\u00A0",	AMATH_none }, /* AMATH_qquad */
	{ OPERATOR,	"\u22EF",	AMATH_none }, /* AMATH_cdots */
	{ OPERATOR,	"\u22EE",	AMATH_none }, /* AMATH_vdots */
	{ OPERATOR,	"\u22F1",	AMATH_none }, /* AMATH_ddots */
	{ OPERATOR,	"\u22C4",	AMATH_none }, /* AMATH_diamond */
	{ OPERATOR,	"\u25A1",	AMATH_none }, /* AMATH_square */
	{ OPERATOR,	"\u230A",	AMATH_none }, /* AMATH_lfloor */
	{ OPERATOR,	"\u230B",	AMATH_none }, /* AMATH_rfloor */
	{ OPERATOR,	"\u2308",	AMATH_none }, /* AMATH_lceiling */
	{ OPERATOR,	"\u2309",	AMATH_none }, /* AMATH_rceiling */
	{ OPERATOR,	"\u2102",	AMATH_none }, /* AMATH_complex */
	{ OPERATOR,	"\u2115",	AMATH_none }, /* AMATH_natural */
	{ OPERATOR,	"\u211A",	AMATH_none }, /* AMATH_rational */
	{ OPERATOR,	"\u211D",	AMATH_none }, /* AMATH_real */
	{ OPERATOR,	"\u2124",	AMATH_none }, /* AMATH_integer */
	{ OPERATOR,	"lim",		AMATH_underover }, /* AMATH_lim */
	{ OPERATOR,	"Lim",		AMATH_underover }, /* AMATH_Lim */
	{ OPERATOR,	"sin",		AMATH_none }, /* AMATH_sin */
	{ OPERATOR,	"cos",		AMATH_none }, /* AMATH_cos */
	{ OPERATOR,	"tan",		AMATH_none }, /* AMATH_tan */
	{ OPERATOR,	"sinh",		AMATH_none }, /* AMATH_sinh */
	{ OPERATOR,	"cosh",		AMATH_none }, /* AMATH_cosh */
	{ OPERATOR,	"tanh",		AMATH_none }, /* AMATH_tanh */
	{ OPERATOR,	"cot",		AMATH_none }, /* AMATH_cot */
	{ OPERATOR,	"sec",		AMATH_none }, /* AMATH_sec */
	{ OPERATOR,	"csc",		AMATH_none }, /* AMATH_csc */
	{ OPERATOR,	"log",		AMATH_none }, /* AMATH_log */
	{ OPERATOR,	"ln",		AMATH_none }, /* AMATH_ln */
	{ OPERATOR,	"det",		AMATH_none }, /* AMATH_det */
	{ OPERATOR,	"dim",		AMATH_none }, /* AMATH_dim */
	{ OPERATOR,	"mod",		AMATH_none }, /* AMATH_mod */
	{ OPERATOR,	"gcd",		AMATH_none }, /* AMATH_gcd */
	{ OPERATOR,	"lcm",		AMATH_none }, /* AMATH_lcm */
	{ OPERATOR,	"lub",		AMATH_none }, /* AMATH_lub */
	{ OPERATOR,	"glb",		AMATH_none }, /* AMATH_glb */
	{ OPERATOR,	"min",		AMATH_underover }, /* AMATH_min */
	{ OPERATOR,	"max",		AMATH_underover }, /* AMATH_max */
	{ ACCENT,	"^",		AMATH_over }, /* AMATH_hat */
	{ ACCENT,	"\u00AF",	AMATH_over }, /* AMATH_bar */
	{ ACCENT,	"_",		AMATH_under }, /* AMATH_ul */
	{ ACCENT,	"\u2192",	AMATH_over }, /* AMATH_vec */
	{ ACCENT,	".",		AMATH_over }, /* AMATH_dot */
	{ ACCENT,	"..",		AMATH_over }, /* AMATH_ddot */
	{ OPERATOR,	"\u2191",	AMATH_none }, /* AMATH_uarr */
	{ OPERATOR,	"\u2193",	AMATH_none }, /* AMATH_darr */
	{ OPERATOR,	"\u2192",	AMATH_none }, /* AMATH_rarr */
	{ OPERATOR,	"\u2192",	AMATH_none }, /* AMATH_to */
	{ OPERATOR,	"\u21A3",	AMATH_none }, /* AMATH_inject */
	{ OPERATOR,	"\u21A0",	AMATH_none }, /* AMATH_surject */
	{ OPERATOR,	"\u2916",	AMATH_none }, /* AMATH_biject */
	{ OPERATOR,	"\u21A6",	AMATH_none }, /* AMATH_maps */
	{ OPERATOR,	"\u2190",	AMATH_none }, /* AMATH_larr */
	{ OPERATOR,	"\u2194",	AMATH_none }, /* AMATH_harr */
	{ OPERATOR,	"\u21D2",	AMATH_none }, /* AMATH_rArr */
	{ OPERATOR,	"\u21D0",	AMATH_none }, /* AMATH_lArr */
	{ OPERATOR,	"\u21D4",	AMATH_none }, /* AMATH_hArr */
	{ UNARY,	"sqrt",		AMATH_none }, /* AMATH_sqrt */
	{ UNARY,	"text",		AMATH_none }, /* AMATH_text */
	{ BINARY,	"frac",		AMATH_none }, /* AMATH_frac */
	{ BINARY,	"root",		AMATH_none }, /* AMATH_root */
	{ BINARY,	"over",		AMATH_none }, /* AMATH_stackrel */
	{ DIV,		"",		AMATH_none }, /* AMATH_fracdiv */
	{ SUB,		"",		AMATH_none }, /* AMATH_sub */
	{ SUP,		"",		AMATH_none }, /* AMATH_sup */
	{ COMMA,	"",		AMATH_none }, /* AMATH_comma */
	{ 0,		"",		AMATH_none }, /* AMATH_EOL */
	{ -1,		"",		AMATH_ignore } /* AMATH_whitespace */
};
